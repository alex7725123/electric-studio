/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/**
 * Fully formed type (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * twitter.com/redclov3r/status/250301539321798657
 */
@mixin font-size($font-size, $line-height:true){
    font-size:$font-size;
  
    font-size:($font-size / $base-font-size)*1rem;
  
    @if $line-height == true{
        line-height:ceil($font-size / $base-line-height) * ($base-line-height / $font-size);
    }
}


/**
 * Style any number of headings in one go:
 *
   .foo{
       @include headings(1, 3){
           color:#BADA55;
       }
    }
 *
 */
@mixin headings($from: 1, $to: 6){
    %base-heading {
        @content
    }

    @if $from >= 1 and $to <= 6{
        @for $i from $from through $to{
            h#{$i}{
                @extend %base-heading;
            }
        }
    }
}


/**
 * Create vendor-prefixed CSS in one go, e.g.
 *
   `@include vendor(border-radius, 4px);`
 *
 */
@mixin vendor($property, $value...){
    -webkit-#{$property}:$value;
       -moz-#{$property}:$value;
        -ms-#{$property}:$value;
         -o-#{$property}:$value;
            #{$property}:$value;
}


/**
 * Create CSS keyframe animations for all vendors in one go, e.g.:
 *
   .foo{
       @include vendor(animation, shrink 3s);
   }
   @include keyframe(shrink){
       from{
           font-size:5em;
       }
   }
 *
 * Courtesy of @integralist: twitter.com/integralist/status/260484115315437569
 */
@mixin keyframe ($animation-name){
    @-webkit-keyframes $animation-name{
        @content;
    }

    @-moz-keyframes $animation-name{
        @content;
    }

    @-ms-keyframes $animation-name{
        @content;
    }

    @-o-keyframes $animation-name{
        @content;
    }

    @keyframes $animation-name{
        @content;
    }
}


/**
 * Force overly long spans of text to truncate, e.g.:
 *
   `@include truncate(100%);`
 *
 * Where `$truncation-boundary` is a united measurement.
 */
@mixin truncate($truncation-boundary){
    max-width:$truncation-boundary;
    white-space:nowrap;
    overflow:hidden;
    text-overflow:ellipsis;
}


/**
 * Media query mixin.
 */

@mixin breakpoint($point) {
  @if $point == xs {
    @media only screen and (min-width: $bp-xs) {
      @content ; 
    }
  } @else if $point == sm {
    @media only screen and (min-width: $bp-sm) {
      @content ; 
    }
  } @else if $point == md {
    @media only screen and (min-width: $bp-md) {
      @content ; 
    }
  } @else if $point == lg {
    @media only screen and (min-width: $bp-lg) {
      @content ; 
    }
  }
}


/**
 * Convert px to em
 */

 @function em($px) {
  $base-font-size : 16;
  @return #{$px/$base-font-size}em;
 }


 // Link colors -----------------------------------------------------------------
//
// First value is for the default/visited color,
// second value is for hover/active/focus states.
// -----------------------------------------------------------------------------

@mixin link-colors($default, $activated: false) {
  color: $default;
  &:link,
  &:visited,
  &:focus { color: $default; }

  @if $activated {
    &:hover,
    &:active { color: $activated; }
  } @else {
    &:hover,
    &:active { color: $default; }
  }
}